[
  {
    "path": "posts/2022-12-06-prottipo-aplicativo-ensaios-multiambientes/",
    "title": "Protótipo De Aplicativo Para Ensaios Multiambientes",
    "description": "Recomendando Genótipos considerando diferentes ambientes de cultivo",
    "author": [
      {
        "name": "Afonso Campos",
        "url": {}
      }
    ],
    "date": "2022-09-06",
    "categories": [
      "Shiny",
      "Aplicativo",
      "Melhoramento Genético"
    ],
    "contents": "\r\n1. Introdução\r\nDurante os 5 anos do meu pós-doutoramento, boa parte dos meus estudos\r\nfoi dedicada ao desenvolvimento dashboards e aplicativos para o programa\r\nde melhoramento da cana-de-açúcar, que são utilizados para tomada de\r\ndecisão internamente, e por motivos óbvios são confidenciais. Deveria\r\nter me preocupado com isto na época buscando desenvolver ferramentas que\r\neu pudesse divulgar, formando assim meu portifólio, utilizando exemplos\r\ncom dados abertos. Todavia, isso toma tempo e eu estava bastante\r\natarefado. Pensando em correr atrás do prejuízo, desenvolvi esse\r\nprotótipo de aplicativo que tem como objetivos compreender quais\r\ngenótipos performam melhor considerando os diferentes ambientes em que\r\nsão avaliados e mostrar o potencial de se utilizar o Shiny para o\r\ndesenvolvimento de um aplicativo para agilizar a obtenção das análises\r\nem um ambiente corporativo.\r\n2. Porque fazer um app?\r\nAcredito que toda a empresa que trabalha com análise de dados tenha\r\nprotocolos pré-estabelecidos. Para facilitar a vida de quem analisa e/ou\r\nconsome os dados, várias estratégias podem ser adotadas. O\r\ndesenvolvimento de um app tem como principal finalidade facilitar a vida\r\ndo usuário final, que sabe interpretar a saída dos dados, mas não tem\r\nhabilidade em programação e/ou tempo hábil para ficar programando. Como\r\no app e executado em um servidor, problemas de\r\ninstalação/compatibilidade também são evitados.\r\n3. Onde fazer?\r\nPoderia usar o Power BI que é o novo queridinho da parte de\r\ndashboards? A resposta é sim, daria para utilizar o Power BI conectado a\r\num banco de dados e com a maioria das análises rodando em R no plano de\r\nfundo. Fiz alguns dashboards assim nos tempos do pós-doutoramento, mas é\r\num trabalho infernal devido ao número de pacotes suportados pelo Power\r\nBI ser limitado. Sempre que queria algo a mais, tinha que investigar\r\ntodo o código e, em algumas vezes reescrever, todas as funções do pacote\r\nque queria utilizar gerando várias linhas de códigos que as vezes tinham\r\nque ser repetidas em vários gráficos e tabelas de uma mesma\r\nsessão.\r\nTirando este problema tem a parte de exportação das análises que eu acho\r\nterrível também. Vou defender o Power BI, caso o objetivo fosse o\r\ndashboard para uma apresentação final de resultados consolidados\r\nbuscando um impacto visual certamente o Power BI seria excelente. Meu\r\npróximo exercício de portifólio (que será o próximo post) será o\r\ndesenvolvimento de um dashboard em Power-bi.\r\n4. Como Fazer?\r\nPensando nos entraves do Power BI, minha opção foi desenvolver o app\r\nem shiny. Mas o que é o shiny? Shiny é um pacote em R (recentemente\r\ntambém disponível para python) que facilita a criação e desenvolvimento\r\naplicativos web interativos.\r\nMas quais são as vantagens? Vou pontuar aqui as principais vantagens\r\npara o que eu desenvolvi: 1. Inúmeras maneiras de hospedar o aplicativo;\r\n2. Além da opção de estar conectado a uma base de dados na nuvem, tal\r\ncomo o Power-bi, eu posso fazer upload de dados de maneira manual (sendo\r\nestá a opção que eu utilizei); 3. Possibilidade de gerar relatórios\r\npersonalizados utilizando Rmakdown gerando documentos formato word que\r\npodem ser baixados pelo usuário ao final da análise para uma nova\r\nconsulta e/ou compartilhamento. 4. Considerando que 99% das análises que\r\neu faço são desenvolvidas em R, sendo o shiny um “pacote” do R, não\r\nexiste entrave de desenvolvimento.\r\n5. O Protótipo Finalizado\r\nO resultado final pode ser visto no vídeo abaixo.\r\n\r\n\r\n6. Considerações finais.\r\nCertamente eu poderia ter colocado mais procedimentos, todavia, o\r\nprocesso de desenvolvimento de uma aplicação é constante. Modificações\r\nsão implementadas conforme as necessidades de quem vai consumir os dados\r\npara tomada de decisão e o surgimento de novos procedimentos. Desta\r\nmaneira, acredito que o propósito de desenvolvimento deste protótipo,\r\nmostrando o potencial da ferramenta, foi atingido.\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-12-06-prottipo-aplicativo-ensaios-multiambientes/multi.jpg",
    "last_modified": "2022-12-06T11:40:12-03:00",
    "input_file": "prottipo-aplicativo-ensaios-multiambientes.knit.md"
  },
  {
    "path": "posts/2022-07-13-criando-um-bot-no-twitter-com-r/",
    "title": "Criando um Bot no Twitter com R",
    "description": "Um exemplo lúdico para aprender a usar o GitHub Actions.",
    "author": [
      {
        "name": "Afonso Campos",
        "url": {}
      }
    ],
    "date": "2022-07-13",
    "categories": [
      "GitHub",
      "Web Scraping",
      "Lógica",
      "In_Utilidade"
    ],
    "contents": "\r\nEsse bot “nasceu” da ideia de aprender a utilizar minimamente o\r\nGitHub Actions para fazer com que meu código em R fosse executado de\r\ntempos em tempos por meio de um Cron. As aplicações no dia a dia de\r\ntrabalho são inúmeras, tais como: agendar envio de relatórios\r\nautomatizados por e-mail; raspagem de dados diárias; atualização de\r\ndasboards. Pera um exemplo simples e lúdico de aplicação pensei no\r\n“comemorarbot” que informa a data comemorativa do dia por meio de uma\r\npostagem diária no twitter.\r\nCódigo em R\r\nPrimeiramente tive que raspar uma base de dados de um site obtendo o\r\nmáximo de datas comemorativas. Em posse da base, com aproximadamente\r\n1350 datas comemorativas, eu resolvi complicar decidi\r\nescrever o código de maneira que as datas comemorativas móveis fossem\r\najustadas automaticamente para o ano corrente (páscoa, carnaval, dia das\r\nmães …). Por conta disso tive que implementar funções para ajustar quase\r\n50 feriados! Mesmo tendo que ser na força bruta, pesquisando cada data\r\nno google e vendo como era estipulada, isso só foi possível porque eu\r\nachei um padrão na escrita da base para os feriados moveis, sendo fácil\r\nextrair para ajustar. Finalizando a parte de código em R eu tive que\r\npensar na frase da postagem com as datas, se somente um feriado frase no\r\nsingular, caso contrário, plural. Outro problema que contornei está\r\nrelacionado ao número máximo de caracteres da postagem no twitter ser\r\nsuperior a 280 (muitos feriados em um único dia). Para esse caso eu fiz\r\ncom que fossem feitas duas postagens (infelizmente não dá para fazer “o\r\nfio” para postagem encadeadas) separadamente dividindo as datas\r\ncomemorativas do dia.\r\nChaves de Acesso no Twitter\r\nAcessei a página de desenvolvedores do twitter e obter os tokens de\r\nacesso para a conta que criei (https://developer.twitter.com/en). Essa chave permite\r\nque eu faça o login na conta e execute a postagens direto do script em\r\nR.\r\nGithub Actions\r\nCom o script em R bastou eu subir para o GitHub meu stcript e uma\r\npasta “workflow” com um arquivo YAML contendo basicamente: as\r\nespecificações da máquina a ser utilizada; Cron com a hora de execução;\r\ninstalação do R e pacotes necessários para execução do código e o\r\ncaminho do script em R a ser executado. Aqui eu tive um problema. Existe\r\numa maneira de colocar as senhas criptografadas dentro do GitHub, mas eu\r\nnão consegui fazer funcionar, desta maneira tive que deixar o código no\r\nrepositório privado com as senhas dentro do script em r.\r\nO resultado\r\nO bot funciona fazendo uma pastagem todos os dias próximo das oito\r\nhoras da manhã.\r\n\r\n\r\n\r\n\r\n\r\n\r\nou veja a conta em funcionamento em: https://twitter.com/comemorarbot\r\nFinalizando, eu só consegui fazer isso funcionar graças a essas\r\nreferências:\r\nhttps://www.rostrum.blog/2020/09/21/londonmapbot/\r\nhttps://oscarbaruffa.com/twitterbot/\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-07-13-criando-um-bot-no-twitter-com-r/comemorar.jpg",
    "last_modified": "2022-07-13T16:31:00-03:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-06-09-app-para-ajudar-a-jogar-termooo/",
    "title": "Um aplicativo para ajudar a jogar Termooo",
    "description": "Um \"filtrão\" para ajudar a selecionar a palavra mais provável",
    "author": [
      {
        "name": "Afonso Campos",
        "url": {}
      }
    ],
    "date": "2022-06-09",
    "categories": [
      "Shiny",
      "Lógica",
      "In_Utilidade",
      "Web Scraping",
      "Aplicativo"
    ],
    "contents": "\r\nIntrodução\r\nMeus amigos e eu estávamos viciados em jogar o termooo, que é a versão brasileira do\r\nwordle. Discutindo sobre as palavras mais prováveis e quem consegue\r\nmanter mais dias sem perder (ofensiva), me veio a ideia de montar um\r\npequeno app em shiny que aplicasse diferentes filtros em um banco de\r\npalavras (“semelhante” a uma árvore de decisão) conforme o jogo\r\navançasse. Apesar de ser algo com o objetivo lúdico, quando eu paro para\r\nfazer algo que nunca fiz antes, quase sempre acabo aprendendo algo que\r\nutilizo em um outro projeto de trabalho.\r\nMontando o Banco de Palavras\r\nEtapa que me tomou um tempo, primeiramente eu fiz uma raspagem em um\r\ndestes sites de dicionários online com o pacote rSelenium buscando todos\r\nas palavras com 5 letras. A segunda fonte um dicionário em formato epub\r\nque também foi lido e teve as palavras de cinco selecionadas. Dias\r\ndepois que eu já havia montado o banco de palavras inicial eu descobri\r\num banco previamente montado de um dos outros app brasileiros com esse\r\nobjetivo e incorporei ao meu banco que conta agora com 18.540\r\npalavras.\r\nO aplicativo “Busca palavra”\r\nCom o banco de dados montados eu parti para prototipar os filtros,\r\nmontando um esboço de forma linear em R e depois adaptando o script para\r\no app. Dessa maneira o app final ficou da maneira que pode ser vista no\r\nvídeo abaixo.\r\n\r\n\r\nResumindo os elementos aplicativo nós temos:\r\nBotão Tutorial ( “i” verde)\r\n12 Filtros (inputs)\r\nBotão chute para nova sugestão de palavra\r\nVisual (output)\r\n4 cards\r\n1 Tabela com as palavras restantes\r\n1 Gráfico com a Fequência relativa das letras em cada posição\r\n\r\nHospedagem do App\r\nEstava buscando outras maneiras de por o app online não gastando\r\nassim todas as horas do meu shiny.io e acabei me deparando com a\r\nopção do Heroku que eu achei bem interessante. Desta maneira o app pode\r\nser acessado no site https://buscapalavra.herokuapp.com\r\nCertamente daria para\r\nimplementar…\r\nCriar um “segundo chute” com letras que não foram utilizadas antes\r\npara ajudar a eliminar mais palavras. Pode levar a mais trentativas\r\ntodavia ajudar a eliminar mais palavras logo no começo.\r\nTive problemas ao estabelecer uma hierarquia entre os filtros,\r\nconsiderando que são várias rodadas de preenchimento. Dessa Maneira só\r\ntravei o número de letras.\r\nPolir o layout do app e gastar muito tempo.\r\nUm boot para fazer responder o jogo sozinho no Rselenium\r\nperdendo a graça de vez.\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-06-09-app-para-ajudar-a-jogar-termooo/capaapp.jpg",
    "last_modified": "2022-07-13T16:03:18-03:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-10-18-mapas-auto-koho/",
    "title": "Mapas Auto-organizáveis de Kohonen",
    "description": "Utilizando inteligência computacional para uma análise de diversidade genética com gráficos interativos.",
    "author": [
      {
        "name": "Afonso Campos",
        "url": {}
      }
    ],
    "date": "2021-10-18",
    "categories": [
      "Diversidade",
      "Agrupamento",
      "IA",
      "Redes Neurais"
    ],
    "contents": "\r\nIntrodução\r\nEsse foi um pipeline que desenvolvi para um artigo utilizando mapas autorganizaveis de kohonen (SOM) para a análise de diversidedade genética de variedades de cana-de-açúcar.\r\nOs dados das siglas das variedades e dos cacteres análisados foram codificados de maneira a manter a originalidade do artigo que esta começando a ser escrito na data de publição deste post.\r\nInformações básicas sobre os dados:\r\n63 variedades (recentes e antigas)\r\n13 Caracteres\r\nDefinição do mapa de kohonen\r\nA definição do número de neurônios (nós da rede) e geralmente feita no chute. Porém existe um método heurístico empregado no metlab (SOM - Supervisionado) que, foi adaptado para o R e eu achei o resultado satisfatório. Desta maneira a grade foi formada por 8 linhas e 5 colunas, totalizando 80 neurônios. Foi utilizada a distancia euclidiana e cinco mil interações para o treinamento da rede. Mais informações abaixo:\r\n\r\n$xdim\r\n[1] 8\r\n\r\n$ydim\r\n[1] 5\r\n\r\n$topo\r\n[1] \"hexagonal\"\r\n\r\n$neighbourhood.fct\r\n[1] gaussian\r\nLevels: bubble gaussian\r\n\r\n$toroidal\r\n[1] FALSE\r\nSOM of size 8x5 with a hexagonal topology and a gaussian neighbourhood function.\r\nThe number of data layers is 1.\r\nDistance measure(s) used: euclidean.\r\nTraining data included: 63 objects.\r\nMean distance to the closest unit in the map: 1.534.\r\n\r\nResultados\r\nA primeira saída é o treinamento da rede. Apesar de não ser um gráfico bonito, o que vale aqui é observar uma “estabilização” conforme o número de interações aumenta.\r\n\r\n\r\n\r\nAo menos em alguns artigos de melhoramento que li não vi ninguém mencionando métricas de qualidade de ajustumento do mapa. Todavia, o pacote aweSOM fornece alguns parâmetros:\r\n\r\n\r\n## Quality measures:\r\n * Quantization error     :  2.569423 \r\n * (% explained variance) :  79.92 \r\n * Topographic error      :  0 \r\n * Kaski-Lagus error      :  3.263092 \r\n \r\n## Number of obs. per map cell:\r\n 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \r\n 4  2  3  1  1  3  2  2  2  0  0  1  1  2  1  2  1  1  4  1  0  2  0 \r\n24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 \r\n 2  3  3  0  0  2  0  0  2  1  2  3  2  2  3  1  1 \r\n\r\nApesar do mapa já nos fornecer um agrupamento, sendo estes os clones inseridos em cada neurônio (tambem chamado de céluas ou subclusters). Estes neurônios (N1 a N40) podem ser agrupados (em superclusters) ,para isso, eu utilizei um metodo hieráraquico (UPGMA) para agrupar e o ponto de corte do dendograma foi o utilizando critério de mojena (k = 1.25). Acredito que esta abordagem é mais palpável que atribuir um ponto de corte aleátório, considerando que neste trabalho não se tem noção de um número ideal de clusters pré definido. Além do dendrogama temos métricas que auxiliam na interpretação da qualidade do dendrograma formado.\r\n\r\n\r\n_________________________________________________________________________ \r\nEstimativa de correlacao cofenetica: \r\n[1] 0.7627311\r\nSignificancia da correlacao cofenetica pelo teste Mantel \r\npvalor: 0.001 \r\nHipotese alternativa: A correlacao e maior que 0 \r\n\r\nPonto de corte pelo metodo Mojena \r\n  k=1.25      k=2 \r\n3.635611 4.404256 \r\n_________________________________________________________________________ \r\n\r\nDe acordo com o ponto de corte estimado acima, cinco grupos são sugeridos e agora eu posso aplicar estes agrupamentos em todas as outras saídas do mapa de kohonen.\r\nComeçando pelo fim aqui eu posso ver (com gráficos interativos) quais e quantos clones foram classificados nos neuronios (pré-clusters) e também os agrupamentos do dendrograma que são representados pelas cores de preenchimento dos hexágonos.\r\n\r\n\r\n\r\n\r\n\r\n\r\nÉ bem comum a representação do número de indivíduos em cada neurônio como neste grafico abaixo:\r\n\r\n\r\n\r\n\r\n\r\n\r\nAqui nós vemos como cada neuronio da grade se relacionou com as treze variaveis além de uma matiz de distancia (Matriz-U) em relção aos seus vizinhos (nesse caso a vizinhança foi esfificada como hexagonal no início do treinamento da rede). Agora os grupos determinados pelo metodo hierarquico são delimitados pelas linhas escuras no mapa.\r\n\r\n\r\n\r\nOutras maneiras de observar todas as variaveis de uma vez só de maneira interativa podem ser observadas nas figuras abaixo.\r\nGráfico Circular\r\n\r\n\r\n\r\n\r\n\r\n\r\nGráfico de Barras\r\n\r\n\r\n\r\n\r\n\r\n\r\nGráfico de Radar\r\n\r\n\r\n\r\n\r\n\r\n\r\nUma das grandes vantagens que eu vejo como iniciante ao utilizar a tecnica é a possibilidade de visualizar a distancia “física” entre os agrupamentos, algo que não é possível em outras técnicas convencionais de analise de agrupamento. Dessa maneira, além dos grupos, posso recomendar cruzamentos utilizando os mais distantes visualmente no mapa de maneira a explorar a variabilidade dos clones.\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-10-18-mapas-auto-koho/koho.jpg",
    "last_modified": "2021-10-18T16:26:48-03:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-10-07-blog-genetica-agrmica/",
    "title": "Blog Genetica Agronômica",
    "description": "blog antigo que irei comentar",
    "author": [
      {
        "name": "Afonso Campos",
        "url": {}
      }
    ],
    "date": "2021-10-07",
    "categories": [
      "outros"
    ],
    "contents": "\r\nApenas uma gráfico de código\r\nem R\r\n\r\n\r\nhist(rnorm(1000))\r\n\r\n\r\n\r\n\r\nteste de postagem do blog antigo https://rstudio.github.io/distill.\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-10-07-blog-genetica-agrmica/genagro.jpg",
    "last_modified": "2022-07-13T11:50:01-03:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-07-13-desafio-do-gerador-de-nmeros/",
    "title": "Desafio da Sequencia de Números",
    "description": "Tentando resolver o problema proposto no grupo do R Brasil programadores.",
    "author": [
      {
        "name": "Afonso Campos",
        "url": {}
      }
    ],
    "date": "2021-08-13",
    "categories": [
      "Lógica"
    ],
    "contents": "\r\nEsse desafio foi publicado no grupo do R Brasil e eu consegui chegar\r\nna resposta. Certamente há maneiras computacionalmente mais eficientes\r\npara resolver.\r\nO Enunciado\r\nDesafio: criar um programa de computador que faça a sequência\r\nabaixo.\r\nQue comecem os jogos. 🙂\r\nUma Sequência interessante, obtida de forma curiosa! (baseada na\r\nsequência dos números primos, adição, multiplicação, e na menor\r\ndiferença POSITIVA para o quadrado perfeito mais próximo) Vamos lá:\r\nOs três primeiros números primos:\r\n2, 3, 5\r\nFazemos:\r\n2 + 3 × 5 = 17\r\nProcuramos o maior quadrado perfeito MENOR do que 17.\r\nÉ 16\r\nFazemos\r\n17 - 16 = 1\r\nEntão o primeiro número da sequência é 1\r\nConstruindo o segundo número da sequência (vejam o trabalhão que\r\ndá):\r\nPegamos os três próximos números primos (7, 11, 13) e fazemos:\r\n7 + 11 × 13 = 150\r\nO maior quadrado perfeito MENOR do 150 é 144\r\n150 - 144 = 6\r\n6 é o segundo número da sequência\r\nO terceiro número da sequência:\r\nFazemos\r\n17 + 19 × 23 = 454\r\nO quadrado perfeito mais próximo (menor do que 454) é 441\r\nEntão\r\n454 - 441 = 13\r\n13 é o terceiro número da sequência Para o quarto número da sequência\r\né só usar os números primos 29, 31, 37 , e seguir a mesma lógica. Para o\r\nquinto número da sequência: usar os números primos 41, 43, 47\r\nA Minha Resolução no R\r\nPasso 1\r\nConsiderando que eu quero que no final sejam gerados 50 números. Para\r\nisso, eu tenho que ter inicialmente 3 vezes valor desejado inicial em\r\nnúmeros primos.\r\n\r\n\r\n# Eu quero que no final ele gere 50 números \r\ndesejado <-  50 \r\n\r\n# Tenho que ter inicialmente 3 para cada número desejado que sofrerão as operacoes de soma e multiplicação \r\ntamanho <- desejado * 3\r\n\r\nnum <- 0\r\n\r\nprimos <- NULL\r\n\r\nprimonum <- NULL\r\n\r\n# Obtendo os números primos com um loop\r\nwhile(num >= 0 ){\r\n  if (num == 2) {\r\n    primonum <- num\r\n  } else if (any(num %% 2:(num-1) == 0)) {\r\n    FALSE\r\n  } else { \r\n    primonum <- num\r\n  }\r\n\r\n    temp <- primonum\r\n  \r\n    num <- num + 1 \r\n  \r\n  primos <-unique(c(temp, primos)) \r\n  \r\n  if(length(primos)  == tamanho){\r\n    primos <- sort(primos)\r\n    \r\n    break\r\n  }\r\n}\r\n\r\nprimos\r\n\r\n\r\n  [1]   2   3   5   7  11  13  17  19  23  29  31  37  41  43  47  53\r\n [17]  59  61  67  71  73  79  83  89  97 101 103 107 109 113 127 131\r\n [33] 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223\r\n [49] 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311\r\n [65] 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409\r\n [81] 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503\r\n [97] 509 521 523 541 547 557 563 569 571 577 587 593 599 601 607 613\r\n[113] 617 619 631 641 643 647 653 659 661 673 677 683 691 701 709 719\r\n[129] 727 733 739 743 751 757 761 769 773 787 797 809 811 821 823 827\r\n[145] 829 839 853 857 859 863\r\n\r\nPasso 2\r\nA operação a ser aplicada e sempre o primeiro + segundo * terceiro\r\nnúmero da sequencia.\r\n\r\n\r\n# primeiro mais o segundo vezes o terceiro \r\n\r\ntamprimos <- length(primos)\r\n\r\nprimeiro <- primos[seq(1, tamprimos, by = 3)]\r\n\r\nsegundo <- primos[seq(2, tamprimos, by = 3)]\r\n\r\nterceiro <- primos[seq(3, tamprimos, by = 3)]\r\n\r\noperacao <- primeiro + segundo * terceiro \r\n\r\noperacao\r\n\r\n\r\n [1]     17    150    454   1176   2062   3652   5250   7466  10500\r\n[10]  12424  18074  22638  27378  32572  38212  47252  53584  60730\r\n[19]  71004  78108  90234  99532 117270 127076 141734 154816 171772\r\n[28] 187044 199346 213900 233740 251488 272992 305220 325462 348668\r\n[37] 365406 382536 412794 430974 456282 485074 523422 549810 576828\r\n[46] 609120 656896 681442 716496 742174\r\n\r\nPasso 3\r\nA raiz quedrada de cada numero da operação do passo 2 que não pode\r\nter resto. Caso tenha, buscar o numero inteiro anterior mais próximo que\r\nsatisfaça essa condição.\r\n\r\n\r\nraizresult <- NULL \r\n\r\nfor(i in operacao){\r\n  num <- i \r\n\r\n    while (num >=0) {\r\n    \r\n    if(sqrt(num) %% 1 == 0){\r\n      \r\n      temp2 <- num \r\n      \r\n      break\r\n      \r\n      }else{num <- num - 1}\r\n    \r\n  }\r\n  \r\n  raizresult <- c(raizresult, temp2)\r\n  \r\n  }\r\n\r\nraizresult\r\n\r\n\r\n [1]     16    144    441   1156   2025   3600   5184   7396  10404\r\n[10]  12321  17956  22500  27225  32400  38025  47089  53361  60516\r\n[19]  70756  77841  90000  99225 116964 126736 141376 154449 171396\r\n[28] 186624 198916 213444 233289 251001 272484 304704 324900 348100\r\n[37] 364816 381924 412164 430336 455625 484416 522729 549081 576081\r\n[46] 608400 656100 680625 715716 741321\r\n\r\nPasso 4\r\nSubitrair o passo 2 do passo 3.\r\n\r\n\r\n# resultado final \r\nfinal <- operacao - raizresult\r\n\r\nfinal \r\n\r\n\r\n [1]   1   6  13  20  37  52  66  70  96 103 118 138 153 172 187 163\r\n[17] 223 214 248 267 234 307 306 340 358 367 376 420 430 456 451 487\r\n[33] 508 516 562 568 590 612 630 638 657 658 693 729 747 720 796 817\r\n[49] 780 853\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-07-13-desafio-do-gerador-de-nmeros/gerador.jpg",
    "last_modified": "2022-08-15T09:23:16-03:00",
    "input_file": {}
  }
]
